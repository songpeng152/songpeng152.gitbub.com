<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[米UI弹窗的问题]]></title>
    <url>%2F2017%2F07%2F13%2F%E7%B1%B3UI%E5%BC%B9%E7%AA%97%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[因为小米对系统的深度定制，所以米UI有很多的问题和Android开发是不一样的，这里纪录一下我之前发现的问题。当升级到miui7的时候发现想要弹出系统级的弹窗（就是那种弹出之后怎么也消失不了的，除非关机，一般用于强制更新）已经不可能了，后来发现原因在于MIUI把这一项作为了系统权限。后来为了实现弹出这个弹窗只能引导用户来开启这个权限（如果我是用户一定想哭）。步骤分为四步走 判断是不是小米 –&gt; 判断MIUI版本 –&gt; 判断有没有开启弹窗权限 –&gt; 跳转到应用设置页 第一步 判断是不是小米 private boolean isMIUI() { String brand = Build.BRAND.toString(); if (&quot;Xiaomi&quot;.equalsIgnoreCase(brand)) { return true; } return false; } 第二步 判断MIUI版本 String miUiVersion = getSystemProperty(&quot;ro.miui.ui.version.name&quot;); public static String getSystemProperty(String propName) { String line; BufferedReader input = null; try { Process p = Runtime.getRuntime().exec(&quot;getprop &quot; + propName); input = new BufferedReader(new InputStreamReader(p.getInputStream()), 1024); line = input.readLine(); input.close(); } catch (IOException ex) { Logger.e(&quot;&quot;, &quot;Unable to read sysprop &quot; + propName, ex); return null; } finally { if (input != null) { try { input.close(); } catch (IOException e) { Logger.e(&quot;&quot;, &quot;Exception while closing InputStream&quot;, e); } } } return line; } 第三步 判断有没有开启弹窗权限 if(isMiuiFloaAllowed(context)){ getAppDetailSettingIntent(context); } public boolean isMiuiFloaAllowed(Context context) { if (isMIUI()) { return checkOp(context); } else { return false; } } private boolean checkOp(Context context) { try { if (AppOpsManager.MODE_ALLOWED == op(context)) { return true; } else { return false; } } catch (Exception e) { e.printStackTrace(); return false; } } private static ApplicationInfo localApplicationInfo1 = null; private int op(Context context) { if (Build.VERSION.SDK_INT &gt;= 19){ try { Object localObject = context .getSystemService(APP_OPS_SERVICE); Class localClass = localObject.getClass(); Class[] arrayOfClass = new Class[3]; arrayOfClass[0] = Integer.TYPE; arrayOfClass[1] = Integer.TYPE; arrayOfClass[2] = String.class; Method localMethod = localClass.getMethod(&quot;checkOp&quot;, arrayOfClass); Object[] arrayOfObject = new Object[3]; arrayOfObject[0] = Integer.valueOf(24); arrayOfObject[1] = Integer.valueOf(Binder.getCallingUid()); arrayOfObject[2] = context.getPackageName(); int j = ((Integer) localMethod.invoke(localObject, arrayOfObject)).intValue(); if (j == 0) return 1; return 0; } catch (Throwable localThrowable2) { return -1; } }else{//19以下的版本的特殊处理 ActivityManager am = (ActivityManager) context.getSystemService(context.ACTIVITY_SERVICE); ComponentName cn = am.getRunningTasks(1).get(0).topActivity; if(!&quot;com.cdel.internal.mobile&quot;.equalsIgnoreCase(cn.getPackageName())){ try { ApplicationInfo localApplicationInfo2 = BaseApplication .getInstance() .getPackageManager() .getApplicationInfo(context.getPackageName(), 0); localApplicationInfo1 = localApplicationInfo2; if (localApplicationInfo1 != null) { if ((0x8000000 &amp; localApplicationInfo1.flags) == 0) return 0; } } catch (Throwable localThrowable1) { while (true) localApplicationInfo1 = null; } } return -1; } } 第四步 跳转到应用设置页 private void getAppDetailSettingIntent(Context context) { Intent localIntent = new Intent(); localIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); if (Build.VERSION.SDK_INT &gt;= 9) { localIntent.setAction(&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;); localIntent.setData(Uri.fromParts(&quot;package&quot;, BaseApplication.getInstance().getPackageName(), null)); } else if (Build.VERSION.SDK_INT &lt;= 8) { localIntent.setAction(Intent.ACTION_VIEW); localIntent.setClassName(&quot;com.android.settings&quot;,&quot;com.android.settings.InstalledAppDetails&quot;); localIntent.putExtra(&quot;com.android.settings.ApplicationPkgName&quot;, BaseApplication.getInstance().getPackageName()); } context.startActivity(localIntent); Toast.makeText(context,&quot;为了展示消息请您在&lt;权限管理&gt;--&gt;&lt;显示悬浮窗&gt;设置悬浮窗权限&quot;,Toast.LENGTH_LONG).show(); }]]></content>
  </entry>
  <entry>
    <title><![CDATA[Android 开发中的一些知识点]]></title>
    <url>%2F2017%2F07%2F13%2FAndroid-%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86%E7%82%B9%2F</url>
    <content type="text"><![CDATA[1.过度绘制 绘制颜色的标识，从好到差：蓝色(1x次绘制) –&gt; 浅绿色(2x绘制) –&gt; 淡红色(3x绘制) –&gt; 红色(4x绘制)。 2.glide 获取缓存图片并存储 new Thread(new Runnable() { @Override public void run() { try { File file = Glide.with(XxqApplication.mContext) .load(avatar) .downloadOnly(Target.SIZE_ORIGINAL, Target.SIZE_ORIGINAL) .get(); Log.d(TAG, &quot;run: &quot;); } catch (InterruptedException e) { e.printStackTrace(); } catch (ExecutionException e) { e.printStackTrace(); } }}).start(); private class SaveImageTask extends AsyncTask&lt;String, Void, File&gt; { private final Context context; public SaveImageTask(Context context) { this.context = context; } @Override protected File doInBackground(String... params) { String imgUrl = params[0]; try { return } catch (Exception ex) { return null; } } @Override protected void onPostExecute(File result) { if (result == null) { return; } //此path就是对应文件的缓存路径 String path = result.getPath(); //将缓存文件copy, 命名为图片格式文件 copyFile(path, newPath); }} /*** oldPath: 图片缓存的路径 * newPath: 图片缓存copy的路径 */ public static void copyFile(String oldPath, String newPath) { try { int byteRead; File oldFile = new File(oldPath); if (oldFile.exists()) { InputStream inStream = new FileInputStream(oldPath); FileOutputStream fs = new FileOutputStream(newPath); byte[] buffer = new byte[1024]; while ( (byteRead = inStream.read(buffer)) != -1) { fs.write(buffer, 0, byteRead); } inStream.close(); } } catch (Exception e) { System.out.println(&quot;复制文件操作出错&quot;); e.printStackTrace(); }} 3.华为荣耀6plus不能打印日志的问题 拨号界面：##2846579## 工程菜单-&gt;后台设置-&gt;Log设置-&gt;选择第一个AP日志 ok了，重启应用就可以了，不需要重启手机。 4.TextView的旋转问题 我之前开发遇到一个问题，teamLeader让把一个页面的的展示变成斜着的，我之前知道有这种功能但是不知道怎么实现，后来到网上找了一些，然后看了一下，都是要重写TextView的方法才能实现，后来发现textView有一个属性就是可以做旋转的，当当当，rotation闪亮登场了，没错他就是旋转，只要在xml中设置就可以了。 5.命令安装App进去apk所在目录下，shift+鼠标右键–&gt;选择“在此处打开命令窗口”，输入：“adb install -r ”把文件拖入，完成。可能出现的问题，adb不是命令，在环境变量自己的用户变量中配置环境变量：配置为sdk下的\platform-tools F:\ProgramFiles\Android\AndroidStudio_SDK\AndroidStudio_green\platform-tools 6.androidStudio遇到more than one library with package name‘com.xxx.xx’ 错误原因是‘com.xxx.xx’被多引用了，引用超过一次。我遇到的情况是，app中引用了相同的arr包报错，找了好久才知道。]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <url>%2F2017%2F07%2F03%2Ffi'r'se%2F</url>
    <content type="text"><![CDATA[第一篇博客 这是我写的第一篇博客，今天看见之前的同学做好他的github上的静态博客，感觉有点儿受刺激了， 4月的时候我也搞过一段时间这个，但是之后觉得不好麻烦就放弃了，现在就对比就想搞了， 感觉搞一个以后如果给别人介绍的时候也可以告诉人家我的博客在哪儿哪儿，网址给你， 看一下吧，嘎嘎，还有感觉做一个博客也能督促自己写一些专业的博客，以后积累技术的经验。 以后有时间慢慢更新，这算是一个好的开头吧，万事开头难！]]></content>
  </entry>
</search>